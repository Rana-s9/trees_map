{
  "version": 3,
  "sources": ["../../javascript/custom/trees.js"],
  "sourcesContent": ["document.addEventListener(\"turbo:load\", function() {\n    const treeDataElement = document.getElementById(\"treeData\");\n\n    // \u3082\u3057 treeDataElement \u304C\u5B58\u5728\u3059\u308C\u3070\u3001JSON\u3092\u30D1\u30FC\u30B9\u3057\u3066 trees \u3092\u53D6\u5F97\n    const trees = treeDataElement ? JSON.parse(treeDataElement.textContent) : [];\n    // 1. \u30B7\u30FC\u30F3\u3001\u30AB\u30E1\u30E9\u3001\u30EC\u30F3\u30C0\u30E9\u30FC\u306E\u8A2D\u5B9A\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 5000);\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n\n    document.body.appendChild(renderer.domElement); // \u63CF\u753B\u9818\u57DF\u3092\u753B\u9762\u306B\u8FFD\u52A0\n    // \u80CC\u666F\u8272\u306E\u8A2D\u5B9A\n    scene.background = new THREE.Color('#CDE6C7');\n    // const textureloader = new THREE.TextureLoader();\n    // textureloader.load('./map.jpg', function (texture) {\n    //     scene.background = texture;\n    // });\n\n    let controls = new THREE.OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.25;\n    controls.enablePan = true;\n    controls.enableZoom = true;\n    controls.maxPolarAngle = Math.PI / 2;\n    controls.minPolarAngle = 0;\n    controls.enableRotate = true;\n\n    window.camera = camera;\n    window.controls = controls;\n\n    const cameraPositions = {\n        north: {\n            // \u30B9\u30A6\u30A7\u30FC\u30C7\u30F3\uFF08\u5317\uFF09\u65B9\u5411\u3092\u898B\u308B\n            position: new THREE.Vector3(11540.5585 / 3, 150, 1166.8548 / 3),\n            lookAt: new THREE.Vector3(11540.5585 / 3, 0, 6166.8548 / 3)\n        },\n        south: {\n            // \u30AA\u30FC\u30B9\u30C8\u30E9\u30EA\u30A2\u306E\u30D1\u30FC\u30B9\uFF08\u5357\uFF09\u65B9\u5411\u3092\u898B\u308B\n            position: new THREE.Vector3(17235.1919 / 3, 150, 17451.7876 / 3),\n            lookAt: new THREE.Vector3(17235.1919 / 3, 0, 12451.7876 / 3)\n        },\n        east: {\n            // \u65E5\u672C\uFF08\u6771\uFF09\u65B9\u5411\u3092\u898B\u308B\n            position: new THREE.Vector3(13471.9972 / 3, 150, 8294.7173 / 3),\n            lookAt: new THREE.Vector3(18471.9972 / 3, 0, 8294.7173 / 3)\n        },\n        west: {\n            // \u30DD\u30EB\u30C8\u30AC\u30EB\uFF08\u897F\uFF09\u65B9\u5411\u3092\u898B\u308B\n            position: new THREE.Vector3(14953.7215 / 3, 150, 8036.6137 / 3),\n            lookAt: new THREE.Vector3(9953.7215 / 3, 0, 8036.6137 / 3)\n        },\n        \"southeast-asia\": {\n            position: new THREE.Vector3(16343.6319 / 3, 150, 9639.8951 / 3),\n            lookAt: new THREE.Vector3(16343.6319 / 3, 0, 9588.8949 / 3)\n        },\n        \"south-asia\": {\n            position: new THREE.Vector3(15321.8055 / 3, 150, 8826.0183 / 3),\n            lookAt: new THREE.Vector3(15321.8055 / 3, 0, 8777.0181 / 3)\n        },\n        africa: {\n            position: new THREE.Vector3(12532.2303 / 3, 150, 10572.1101 / 3),\n            lookAt: new THREE.Vector3(12532.2303 / 3, 0, 10522.1102 / 3)\n        },\n        \"north-africa\": {\n            position: new THREE.Vector3(12299.5215 / 3, 150, 8653.7907 / 3),\n            lookAt: new THREE.Vector3(12299.5215 / 3, 0, 8604.791 / 3)\n        },\n        \"north-america\": {\n            position: new THREE.Vector3(4000.3173 / 3, 150, 7607.859 / 3),\n            lookAt: new THREE.Vector3(4000.3173 / 3, 0, 7549.8591 / 3)\n        },\n        \"south-america\": {\n            position: new THREE.Vector3(6861.4224 / 3, 150, 10687.7517 / 3),\n            lookAt: new THREE.Vector3(6861.4224 / 3, 0, 10638.7518 / 3)\n        },\n        \"central-america\": {\n            position: new THREE.Vector3(5832.0831 / 3, 150, 9952.0851 / 3),\n            lookAt: new THREE.Vector3(5832.0831 / 3, 0, 9903.0852 / 3)\n        },\n        \"eastern-europe\": {\n            position: new THREE.Vector3(11918.9764 / 3, 150, 7268.8875 / 3),\n            lookAt: new THREE.Vector3(11918.9764 / 3, 0, 7219.8876 / 3)\n        },\n        \"central-asia\": {\n            position: new THREE.Vector3(14818.5633 / 3, 150, 7442.7084 / 3),\n            lookAt: new THREE.Vector3(14818.5633 / 3, 0, 7393.7085 / 3)\n        },\n        \"middle-east\": {\n            position: new THREE.Vector3(13371.2388 / 3, 150, 8832.2287 / 3),\n            lookAt: new THREE.Vector3(13371.2388 / 3, 0, 8791.2288 / 3)\n        },\n        arctic: {\n            position: new THREE.Vector3(11707.6530 / 3, 150, 3001.3854 / 3),\n            lookAt: new THREE.Vector3(11707.6530 / 3, 0, 2951.3853 / 3)\n        },\n        antarctic: {\n            position: new THREE.Vector3(18350.0799 / 3, 150, 19747.1103 / 3),\n            lookAt: new THREE.Vector3(18350.0799 / 3, 0, 19697.1102 / 3)\n        }\n    };    \n\n    camera.position.copy(cameraPositions.east.position);\n\n    // \u30AB\u30E1\u30E9\u306E\u521D\u671F\u4F4D\u7F6E\u8A2D\u5B9A\n    controls.target.copy(cameraPositions.east.lookAt); // \u2190 \u8FFD\u52A0\uFF01\n    camera.lookAt(cameraPositions.east.lookAt);         // \u2190 \u4E00\u5FDC\u8FFD\u52A0\uFF08\u7121\u304F\u3066\u3082OK\uFF09\n    controls.update();\n\n    window.switchCameraView = function(direction) {\n        const target = cameraPositions[direction];\n        if (target) {\n            camera.position.copy(target.position);\n            controls.target.copy(target.lookAt);  // \u2190 \u8FFD\u52A0\uFF01\n            camera.lookAt(target.lookAt);         // \u2190 \u4E00\u5FDC\u8FFD\u52A0\n            controls.update();\n\n            renderer.render(scene, camera);\n\n            console.log(`Switched to ${direction}`, camera.position, controls.target);\n        }\n    };\n\n    // \u30AB\u30E1\u30E9\u5207\u308A\u66FF\u3048\u30DC\u30BF\u30F3\u30A4\u30D9\u30F3\u30C8\u8A2D\u5B9A\n    const directions = [\n        'north',\n        'south',\n        'east',\n        'west',\n        'southeast-asia',\n        'south-asia',\n        'africa',\n        'north-america',\n        'south-america',\n        'eastern-europe',\n        'central-asia',\n        'central-america',\n        'middle-east',\n        'north-africa',\n        'arctic',\n        'antarctic'\n    ];      \n    directions.forEach(direction => {\n        const btn = document.getElementById(`btn-${direction}`);\n        if (btn) {\n            btn.addEventListener(\"click\", () => switchCameraView(direction));\n        }\n    });\n\n    // 2. \u7167\u660E\u3092\u8FFD\u52A0\n    const light = new THREE.DirectionalLight(0xffffff, 1); // \u592A\u967D\u306E\u3088\u3046\u306A\u5149\n    light.position.set(10, 10, 10).normalize();\n    scene.add(light); // \u30B7\u30FC\u30F3\u306B\u5149\u3092\u8FFD\u52A0\n\n    // Draco\u30ED\u30FC\u30C0\u30FC\u8A2D\u5B9A\n    const dracoLoader = new THREE.DRACOLoader();\n    dracoLoader.setDecoderPath('https://www.gstatic.com/draco/v1/decoders/');\n\n\n    // GLTF\u30ED\u30FC\u30C0\u30FC\u8A2D\u5B9A\n    const loader = new THREE.GLTFLoader();\n    loader.setDRACOLoader(dracoLoader);\n\n    loader.load('./night_yanagawa_tree_new.glb', function(gltf) {\n        const model = gltf.scene;\n        model.scale.set(1, 1, 1);\n        // scene.add(model);\n\n        // \u30E6\u30FC\u30B6\u30FC\u540D\u3092\u30AD\u30FC\u306B\u3057\u3066\u3001\u30E9\u30F3\u30C0\u30E0\u306A\u8272\u3092\u5272\u308A\u5F53\u3066\u308B\u30DE\u30C3\u30D7\n        const userColorMap = JSON.parse(localStorage.getItem('userColorMap')) || {};\n\n        function getColorForUser(userName) {\n            if (!userColorMap[userName]) {\n                // \u30E9\u30F3\u30C0\u30E0\u30AB\u30E9\u30FC\u3092\u4F5C\u3063\u3066\u4FDD\u5B58\n                userColorMap[userName] = getRandomColor();\n                localStorage.setItem('userColorMap', JSON.stringify(userColorMap));\n            }\n            return userColorMap[userName];\n        }\n\n        // \u30E9\u30F3\u30C0\u30E0\u306A\u8272\u3092\u751F\u6210\u3059\u308B\u95A2\u6570\n        function getRandomColor() {\n            const hue = Math.floor(Math.random() * 360);\n            return `hsl(${hue}, 70%, 60%)`; // \u5F69\u5EA6\u3084\u660E\u5EA6\u3092\u4E00\u5B9A\u306B\u4FDD\u3064\u3068\u898B\u3084\u3059\u3044\n        }\n\n        // \u30E9\u30D9\u30EB\u3092\u4F5C\u6210\u3059\u308B\u95A2\u6570\n        function createTextSprite(message1, message2, userName, favName) {\n            const color = getColorForUser(userName, favName);\n\n            const canvas = document.createElement('canvas');\n            const context = canvas.getContext('2d');\n            context.clearRect(0, 0, canvas.width, canvas.height);\n            context.font = 'bold 15px Arial';\n            context.fillStyle = color;\n            context.fillText(message1, 10, 30);\n            context.fillText(message2, 10, 45);\n\n\n            const texture = new THREE.CanvasTexture(canvas);\n            texture.needsUpdate = true; // \u660E\u793A\u7684\u306B\u66F4\u65B0\n            const material = new THREE.SpriteMaterial({ map: texture, transparent: true });\n            const sprite = new THREE.Sprite(material);\n            sprite.scale.set(50, 25, 1);\n            return sprite;\n        }\n\n        // \u6728\u3092\u8907\u88FD\u3059\u308B\u95A2\u6570(\u4FDD\u5B58\u306A\u3057)\n        function cloneTreeWithoutSaving(tree) {\n            const clonedTree = model.clone();\n\n            \n\n            // \u5EA7\u6A19\u30B9\u30B1\u30FC\u30EA\u30F3\u30B0\u306E\u6761\u4EF6\u5206\u5C90\n            const scale = 300;\n            let x = tree.position_x;\n            let y = tree.position_y;\n            let z = tree.position_z;\n\n            if (tree.fav_place_id) {\n                x /= scale;\n                z /= scale;\n            }\n\n            const position = { x,y, z };\n            clonedTree.position.set(position.x, position.y, position.z);\n            \n            scene.add(clonedTree);\n\n            const labelText1 = `${tree.name} / ${tree.user_name} `;\n            const labelText2 = tree.fav_name? `${tree.fav_name}` : \"random\";\n            const textSprite = createTextSprite(labelText1, labelText2);\n            textSprite.position.set(position.x, position.y + 15, position.z);\n            scene.add(textSprite);\n        }\n\n        // \u6728\u3092\u8907\u88FD\u3057\u3066\u4FDD\u5B58\u3059\u308B\u95A2\u6570\uFF08\u30DC\u30BF\u30F3\u62BC\u4E0B\u6642\uFF09\n        function cloneTreeWithSaving(position, favPlaceId = null) {\n            const clonedTree = model.clone();\n            clonedTree.position.set(position.x, position.y, position.z);\n            scene.add(clonedTree);\n            sendTreeDataToServer(clonedTree.position, favPlaceId);\n        }\n\n        // \u6728\u306E\u30C7\u30FC\u30BF\u3092\u8AAD\u307F\u8FBC\u3093\u3067\u3001\u4E00\u5EA6\u3060\u3051\u8868\u793A\n        trees.forEach(tree => {\n            cloneTreeWithoutSaving(tree);\n        });\n\n        // \u30DC\u30BF\u30F3\u304C\u30AF\u30EA\u30C3\u30AF\u3055\u308C\u305F\u3068\u304D\u3060\u3051\u3001\u4FDD\u5B58\u4ED8\u304D\u3067\u6728\u3092\u8FFD\u52A0\n        document.getElementById('addTreeButton').addEventListener('click', () => {\n            const scale = 1.5;\n\n            const minX = 9953.7215 / scale;\n            const maxX = 18471.9972 / scale;\n\n            const minZ = 6166.8548 / scale;\n            const maxZ = 17451.7876 / scale;\n            const randomPosition = {\n                x: Math.random() * (maxX - minX) + minX,\n                y: 0,\n                z: Math.random() * (maxZ - minZ) + minZ\n            };\n            cloneTreeWithSaving(randomPosition, null);\n        });\n\n        document.getElementById('addFavTreeButton')?.addEventListener('click', () => {\n            const select = document.getElementById('fav_place_select');\n            const selectedOption = select.selectedOptions[0];\n        \n            const favId = selectedOption.value;\n            const favX = parseFloat(selectedOption.dataset.x);\n            const favZ = parseFloat(selectedOption.dataset.z);\n\n            // Three.js \u306B\u6728\u3092\u8FFD\u52A0\n            const position = { x: favX, y: 0, z: favZ };\n            cloneTreeWithSaving(position, favId); // \u3053\u3053\u3067\u4FDD\u5B58\u4ED8\u304D\u3067\u8FFD\u52A0\n        });        \n\n    });\n\n    // \u30A2\u30CB\u30E1\u30FC\u30B7\u30E7\u30F3\u30EB\u30FC\u30D7\n    function animate() {\n        requestAnimationFrame(animate);\n        controls.update();\n        renderer.render(scene, camera);\n    }\n    animate();\n\n    // 3. \u30B5\u30FC\u30D0\u30FC\u306B\u6728\u306E\u30C7\u30FC\u30BF\u3092\u9001\u4FE1\u3059\u308B\u95A2\u6570\n    function sendTreeDataToServer(position, favPlaceId = null) {\n        const treeData = {\n            tree_name: \"\u540D\u3082\u306A\u3044\u6728\",\n            position_x: position.x,\n            position_y: position.y,\n            position_z: position.z,\n            fav_place_id: favPlaceId\n        };\n\n        fetch('/map_trees', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-CSRF-Token': document.querySelector('[name=\"csrf-token\"]').content\n            },\n            body: JSON.stringify({ tree: treeData })\n        })\n        .then(response => response.json())\n        .then(data => {\n            if (data.status === 'success') {\n                console.log('\u6728\u304C\u4FDD\u5B58\u3055\u308C\u307E\u3057\u305F:', data.tree)\n            } else {\n                console.error('\u4FDD\u5B58\u30A8\u30E9\u30FC:', data.errors);\n            }\n        })\n        .catch(error => console.error('\u9001\u4FE1\u30A8\u30E9\u30FC:', error));\n    }\n\n    // \u30A6\u30A3\u30F3\u30C9\u30A6\u30B5\u30A4\u30BA\u5909\u66F4\u6642\u306B\u30EC\u30F3\u30C0\u30E9\u30FC\u3068\u30AB\u30E1\u30E9\u3092\u8ABF\u6574\n    window.addEventListener('resize', () => {\n        const width = window.innerWidth;\n        const height = window.innerHeight;\n        renderer.setSize(width, height);\n        camera.aspect = width / height;\n        camera.updateProjectionMatrix();\n    });\n});\n"],
  "mappings": "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",
  "names": []
}
